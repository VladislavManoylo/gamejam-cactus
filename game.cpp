#include <iostream>
#include <chrono>
#include <thread>
#include <ncurses.h>
using namespace std;
using namespace std::chrono;

#define DEBUG

const unsigned FPS = 30;
const unsigned MPF = 1000/FPS;

enum class Command {
	exit,
	none
};

Command getCommand() {
	char input = getch();
	switch (input) {
		case 27: return Command::exit; // 27 is the escape key
		default: return Command::none;
	}
}

class Game {
public:
	Game() : m_running(true) {}

	bool isRunning() const { return m_running; }

	char* getScreen() const {
		return m_screen;
	}

	void runCommand(Command cmd) {
		if (cmd == Command::exit)
			m_running = false;
	}

private:
	bool m_running;
	char* m_screen =
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n"
		"................................................................................\n";
};

int main() {
	initscr();
	nodelay(stdscr, TRUE);
	Command cmd = Command::none;
	time_point<system_clock> time = system_clock::now();
	Game game;
	do {
		game.runCommand(getCommand());

		erase();
		printw(game.getScreen());
		refresh();

		time += milliseconds(MPF);
		this_thread::sleep_until(time);
	} while (game.isRunning());
	endwin();

	return 0;
}
